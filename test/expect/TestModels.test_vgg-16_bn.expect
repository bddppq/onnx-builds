graph torch-jit-export (
  %0[FLOAT, 2x3x224x224]
  %1[FLOAT, 64x3x3x3]
  %2[FLOAT, 64]
  %3[FLOAT, 64]
  %4[FLOAT, 64]
  %5[FLOAT, 64]
  %6[FLOAT, 64]
  %7[FLOAT, 64x64x3x3]
  %8[FLOAT, 64]
  %9[FLOAT, 64]
  %10[FLOAT, 64]
  %11[FLOAT, 64]
  %12[FLOAT, 64]
  %13[FLOAT, 128x64x3x3]
  %14[FLOAT, 128]
  %15[FLOAT, 128]
  %16[FLOAT, 128]
  %17[FLOAT, 128]
  %18[FLOAT, 128]
  %19[FLOAT, 128x128x3x3]
  %20[FLOAT, 128]
  %21[FLOAT, 128]
  %22[FLOAT, 128]
  %23[FLOAT, 128]
  %24[FLOAT, 128]
  %25[FLOAT, 256x128x3x3]
  %26[FLOAT, 256]
  %27[FLOAT, 256]
  %28[FLOAT, 256]
  %29[FLOAT, 256]
  %30[FLOAT, 256]
  %31[FLOAT, 256x256x3x3]
  %32[FLOAT, 256]
  %33[FLOAT, 256]
  %34[FLOAT, 256]
  %35[FLOAT, 256]
  %36[FLOAT, 256]
  %37[FLOAT, 256x256x3x3]
  %38[FLOAT, 256]
  %39[FLOAT, 256]
  %40[FLOAT, 256]
  %41[FLOAT, 256]
  %42[FLOAT, 256]
  %43[FLOAT, 512x256x3x3]
  %44[FLOAT, 512]
  %45[FLOAT, 512]
  %46[FLOAT, 512]
  %47[FLOAT, 512]
  %48[FLOAT, 512]
  %49[FLOAT, 512x512x3x3]
  %50[FLOAT, 512]
  %51[FLOAT, 512]
  %52[FLOAT, 512]
  %53[FLOAT, 512]
  %54[FLOAT, 512]
  %55[FLOAT, 512x512x3x3]
  %56[FLOAT, 512]
  %57[FLOAT, 512]
  %58[FLOAT, 512]
  %59[FLOAT, 512]
  %60[FLOAT, 512]
  %61[FLOAT, 512x512x3x3]
  %62[FLOAT, 512]
  %63[FLOAT, 512]
  %64[FLOAT, 512]
  %65[FLOAT, 512]
  %66[FLOAT, 512]
  %67[FLOAT, 512x512x3x3]
  %68[FLOAT, 512]
  %69[FLOAT, 512]
  %70[FLOAT, 512]
  %71[FLOAT, 512]
  %72[FLOAT, 512]
  %73[FLOAT, 512x512x3x3]
  %74[FLOAT, 512]
  %75[FLOAT, 512]
  %76[FLOAT, 512]
  %77[FLOAT, 512]
  %78[FLOAT, 512]
  %79[FLOAT, 4096x25088]
  %80[FLOAT, 4096]
  %81[FLOAT, 4096x4096]
  %82[FLOAT, 4096]
  %83[FLOAT, 1000x4096]
  %84[FLOAT, 1000]
) {
  %85 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%0, %1, %2)
  %86 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%85, %3, %4, %5, %6)
  %87 = Relu(%86)
  %88 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%87, %7, %8)
  %89 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%88, %9, %10, %11, %12)
  %90 = Relu(%89)
  %91 = MaxPool[kernel_shape = [2, 2], pads = [0, 0, 0, 0], strides = [2, 2]](%90)
  %92 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%91, %13, %14)
  %93 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%92, %15, %16, %17, %18)
  %94 = Relu(%93)
  %95 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%94, %19, %20)
  %96 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%95, %21, %22, %23, %24)
  %97 = Relu(%96)
  %98 = MaxPool[kernel_shape = [2, 2], pads = [0, 0, 0, 0], strides = [2, 2]](%97)
  %99 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%98, %25, %26)
  %100 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%99, %27, %28, %29, %30)
  %101 = Relu(%100)
  %102 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%101, %31, %32)
  %103 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%102, %33, %34, %35, %36)
  %104 = Relu(%103)
  %105 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%104, %37, %38)
  %106 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%105, %39, %40, %41, %42)
  %107 = Relu(%106)
  %108 = MaxPool[kernel_shape = [2, 2], pads = [0, 0, 0, 0], strides = [2, 2]](%107)
  %109 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%108, %43, %44)
  %110 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%109, %45, %46, %47, %48)
  %111 = Relu(%110)
  %112 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%111, %49, %50)
  %113 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%112, %51, %52, %53, %54)
  %114 = Relu(%113)
  %115 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%114, %55, %56)
  %116 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%115, %57, %58, %59, %60)
  %117 = Relu(%116)
  %118 = MaxPool[kernel_shape = [2, 2], pads = [0, 0, 0, 0], strides = [2, 2]](%117)
  %119 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%118, %61, %62)
  %120 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%119, %63, %64, %65, %66)
  %121 = Relu(%120)
  %122 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%121, %67, %68)
  %123 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%122, %69, %70, %71, %72)
  %124 = Relu(%123)
  %125 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%124, %73, %74)
  %126 = BatchNormalization[epsilon = 9.99999974737875e-06, is_test = 1, momentum = 0.899999976158142](%125, %75, %76, %77, %78)
  %127 = Relu(%126)
  %128 = MaxPool[kernel_shape = [2, 2], pads = [0, 0, 0, 0], strides = [2, 2]](%127)
  %129 = Flatten[axis = 1](%128)
  %130 = Gemm[alpha = 1, beta = 1, broadcast = 1, transB = 1](%129, %79, %80)
  %131 = Relu(%130)
  %132, %133 = Dropout[is_test = 1, ratio = 0.5](%131)
  %134 = Gemm[alpha = 1, beta = 1, broadcast = 1, transB = 1](%132, %81, %82)
  %135 = Relu(%134)
  %136, %137 = Dropout[is_test = 1, ratio = 0.5](%135)
  %138 = Gemm[alpha = 1, beta = 1, broadcast = 1, transB = 1](%136, %83, %84)
  return %138
}