graph torch-jit-export (
  %0[FLOAT, 2x3x299x299]
  %1[FLOAT, 32x3x3x3]
  %2[FLOAT, 32]
  %3[FLOAT, 32]
  %4[FLOAT, 32]
  %5[FLOAT, 32]
  %6[INT64, 1]
  %7[FLOAT, 32x32x3x3]
  %8[FLOAT, 32]
  %9[FLOAT, 32]
  %10[FLOAT, 32]
  %11[FLOAT, 32]
  %12[INT64, 1]
  %13[FLOAT, 64x32x3x3]
  %14[FLOAT, 64]
  %15[FLOAT, 64]
  %16[FLOAT, 64]
  %17[FLOAT, 64]
  %18[INT64, 1]
  %19[FLOAT, 80x64x1x1]
  %20[FLOAT, 80]
  %21[FLOAT, 80]
  %22[FLOAT, 80]
  %23[FLOAT, 80]
  %24[INT64, 1]
  %25[FLOAT, 192x80x3x3]
  %26[FLOAT, 192]
  %27[FLOAT, 192]
  %28[FLOAT, 192]
  %29[FLOAT, 192]
  %30[INT64, 1]
  %31[FLOAT, 64x192x1x1]
  %32[FLOAT, 64]
  %33[FLOAT, 64]
  %34[FLOAT, 64]
  %35[FLOAT, 64]
  %36[INT64, 1]
  %37[FLOAT, 48x192x1x1]
  %38[FLOAT, 48]
  %39[FLOAT, 48]
  %40[FLOAT, 48]
  %41[FLOAT, 48]
  %42[INT64, 1]
  %43[FLOAT, 64x48x5x5]
  %44[FLOAT, 64]
  %45[FLOAT, 64]
  %46[FLOAT, 64]
  %47[FLOAT, 64]
  %48[INT64, 1]
  %49[FLOAT, 64x192x1x1]
  %50[FLOAT, 64]
  %51[FLOAT, 64]
  %52[FLOAT, 64]
  %53[FLOAT, 64]
  %54[INT64, 1]
  %55[FLOAT, 96x64x3x3]
  %56[FLOAT, 96]
  %57[FLOAT, 96]
  %58[FLOAT, 96]
  %59[FLOAT, 96]
  %60[INT64, 1]
  %61[FLOAT, 96x96x3x3]
  %62[FLOAT, 96]
  %63[FLOAT, 96]
  %64[FLOAT, 96]
  %65[FLOAT, 96]
  %66[INT64, 1]
  %67[FLOAT, 32x192x1x1]
  %68[FLOAT, 32]
  %69[FLOAT, 32]
  %70[FLOAT, 32]
  %71[FLOAT, 32]
  %72[INT64, 1]
  %73[FLOAT, 64x256x1x1]
  %74[FLOAT, 64]
  %75[FLOAT, 64]
  %76[FLOAT, 64]
  %77[FLOAT, 64]
  %78[INT64, 1]
  %79[FLOAT, 48x256x1x1]
  %80[FLOAT, 48]
  %81[FLOAT, 48]
  %82[FLOAT, 48]
  %83[FLOAT, 48]
  %84[INT64, 1]
  %85[FLOAT, 64x48x5x5]
  %86[FLOAT, 64]
  %87[FLOAT, 64]
  %88[FLOAT, 64]
  %89[FLOAT, 64]
  %90[INT64, 1]
  %91[FLOAT, 64x256x1x1]
  %92[FLOAT, 64]
  %93[FLOAT, 64]
  %94[FLOAT, 64]
  %95[FLOAT, 64]
  %96[INT64, 1]
  %97[FLOAT, 96x64x3x3]
  %98[FLOAT, 96]
  %99[FLOAT, 96]
  %100[FLOAT, 96]
  %101[FLOAT, 96]
  %102[INT64, 1]
  %103[FLOAT, 96x96x3x3]
  %104[FLOAT, 96]
  %105[FLOAT, 96]
  %106[FLOAT, 96]
  %107[FLOAT, 96]
  %108[INT64, 1]
  %109[FLOAT, 64x256x1x1]
  %110[FLOAT, 64]
  %111[FLOAT, 64]
  %112[FLOAT, 64]
  %113[FLOAT, 64]
  %114[INT64, 1]
  %115[FLOAT, 64x288x1x1]
  %116[FLOAT, 64]
  %117[FLOAT, 64]
  %118[FLOAT, 64]
  %119[FLOAT, 64]
  %120[INT64, 1]
  %121[FLOAT, 48x288x1x1]
  %122[FLOAT, 48]
  %123[FLOAT, 48]
  %124[FLOAT, 48]
  %125[FLOAT, 48]
  %126[INT64, 1]
  %127[FLOAT, 64x48x5x5]
  %128[FLOAT, 64]
  %129[FLOAT, 64]
  %130[FLOAT, 64]
  %131[FLOAT, 64]
  %132[INT64, 1]
  %133[FLOAT, 64x288x1x1]
  %134[FLOAT, 64]
  %135[FLOAT, 64]
  %136[FLOAT, 64]
  %137[FLOAT, 64]
  %138[INT64, 1]
  %139[FLOAT, 96x64x3x3]
  %140[FLOAT, 96]
  %141[FLOAT, 96]
  %142[FLOAT, 96]
  %143[FLOAT, 96]
  %144[INT64, 1]
  %145[FLOAT, 96x96x3x3]
  %146[FLOAT, 96]
  %147[FLOAT, 96]
  %148[FLOAT, 96]
  %149[FLOAT, 96]
  %150[INT64, 1]
  %151[FLOAT, 64x288x1x1]
  %152[FLOAT, 64]
  %153[FLOAT, 64]
  %154[FLOAT, 64]
  %155[FLOAT, 64]
  %156[INT64, 1]
  %157[FLOAT, 384x288x3x3]
  %158[FLOAT, 384]
  %159[FLOAT, 384]
  %160[FLOAT, 384]
  %161[FLOAT, 384]
  %162[INT64, 1]
  %163[FLOAT, 64x288x1x1]
  %164[FLOAT, 64]
  %165[FLOAT, 64]
  %166[FLOAT, 64]
  %167[FLOAT, 64]
  %168[INT64, 1]
  %169[FLOAT, 96x64x3x3]
  %170[FLOAT, 96]
  %171[FLOAT, 96]
  %172[FLOAT, 96]
  %173[FLOAT, 96]
  %174[INT64, 1]
  %175[FLOAT, 96x96x3x3]
  %176[FLOAT, 96]
  %177[FLOAT, 96]
  %178[FLOAT, 96]
  %179[FLOAT, 96]
  %180[INT64, 1]
  %181[FLOAT, 192x768x1x1]
  %182[FLOAT, 192]
  %183[FLOAT, 192]
  %184[FLOAT, 192]
  %185[FLOAT, 192]
  %186[INT64, 1]
  %187[FLOAT, 128x768x1x1]
  %188[FLOAT, 128]
  %189[FLOAT, 128]
  %190[FLOAT, 128]
  %191[FLOAT, 128]
  %192[INT64, 1]
  %193[FLOAT, 128x128x1x7]
  %194[FLOAT, 128]
  %195[FLOAT, 128]
  %196[FLOAT, 128]
  %197[FLOAT, 128]
  %198[INT64, 1]
  %199[FLOAT, 192x128x7x1]
  %200[FLOAT, 192]
  %201[FLOAT, 192]
  %202[FLOAT, 192]
  %203[FLOAT, 192]
  %204[INT64, 1]
  %205[FLOAT, 128x768x1x1]
  %206[FLOAT, 128]
  %207[FLOAT, 128]
  %208[FLOAT, 128]
  %209[FLOAT, 128]
  %210[INT64, 1]
  %211[FLOAT, 128x128x7x1]
  %212[FLOAT, 128]
  %213[FLOAT, 128]
  %214[FLOAT, 128]
  %215[FLOAT, 128]
  %216[INT64, 1]
  %217[FLOAT, 128x128x1x7]
  %218[FLOAT, 128]
  %219[FLOAT, 128]
  %220[FLOAT, 128]
  %221[FLOAT, 128]
  %222[INT64, 1]
  %223[FLOAT, 128x128x7x1]
  %224[FLOAT, 128]
  %225[FLOAT, 128]
  %226[FLOAT, 128]
  %227[FLOAT, 128]
  %228[INT64, 1]
  %229[FLOAT, 192x128x1x7]
  %230[FLOAT, 192]
  %231[FLOAT, 192]
  %232[FLOAT, 192]
  %233[FLOAT, 192]
  %234[INT64, 1]
  %235[FLOAT, 192x768x1x1]
  %236[FLOAT, 192]
  %237[FLOAT, 192]
  %238[FLOAT, 192]
  %239[FLOAT, 192]
  %240[INT64, 1]
  %241[FLOAT, 192x768x1x1]
  %242[FLOAT, 192]
  %243[FLOAT, 192]
  %244[FLOAT, 192]
  %245[FLOAT, 192]
  %246[INT64, 1]
  %247[FLOAT, 160x768x1x1]
  %248[FLOAT, 160]
  %249[FLOAT, 160]
  %250[FLOAT, 160]
  %251[FLOAT, 160]
  %252[INT64, 1]
  %253[FLOAT, 160x160x1x7]
  %254[FLOAT, 160]
  %255[FLOAT, 160]
  %256[FLOAT, 160]
  %257[FLOAT, 160]
  %258[INT64, 1]
  %259[FLOAT, 192x160x7x1]
  %260[FLOAT, 192]
  %261[FLOAT, 192]
  %262[FLOAT, 192]
  %263[FLOAT, 192]
  %264[INT64, 1]
  %265[FLOAT, 160x768x1x1]
  %266[FLOAT, 160]
  %267[FLOAT, 160]
  %268[FLOAT, 160]
  %269[FLOAT, 160]
  %270[INT64, 1]
  %271[FLOAT, 160x160x7x1]
  %272[FLOAT, 160]
  %273[FLOAT, 160]
  %274[FLOAT, 160]
  %275[FLOAT, 160]
  %276[INT64, 1]
  %277[FLOAT, 160x160x1x7]
  %278[FLOAT, 160]
  %279[FLOAT, 160]
  %280[FLOAT, 160]
  %281[FLOAT, 160]
  %282[INT64, 1]
  %283[FLOAT, 160x160x7x1]
  %284[FLOAT, 160]
  %285[FLOAT, 160]
  %286[FLOAT, 160]
  %287[FLOAT, 160]
  %288[INT64, 1]
  %289[FLOAT, 192x160x1x7]
  %290[FLOAT, 192]
  %291[FLOAT, 192]
  %292[FLOAT, 192]
  %293[FLOAT, 192]
  %294[INT64, 1]
  %295[FLOAT, 192x768x1x1]
  %296[FLOAT, 192]
  %297[FLOAT, 192]
  %298[FLOAT, 192]
  %299[FLOAT, 192]
  %300[INT64, 1]
  %301[FLOAT, 192x768x1x1]
  %302[FLOAT, 192]
  %303[FLOAT, 192]
  %304[FLOAT, 192]
  %305[FLOAT, 192]
  %306[INT64, 1]
  %307[FLOAT, 160x768x1x1]
  %308[FLOAT, 160]
  %309[FLOAT, 160]
  %310[FLOAT, 160]
  %311[FLOAT, 160]
  %312[INT64, 1]
  %313[FLOAT, 160x160x1x7]
  %314[FLOAT, 160]
  %315[FLOAT, 160]
  %316[FLOAT, 160]
  %317[FLOAT, 160]
  %318[INT64, 1]
  %319[FLOAT, 192x160x7x1]
  %320[FLOAT, 192]
  %321[FLOAT, 192]
  %322[FLOAT, 192]
  %323[FLOAT, 192]
  %324[INT64, 1]
  %325[FLOAT, 160x768x1x1]
  %326[FLOAT, 160]
  %327[FLOAT, 160]
  %328[FLOAT, 160]
  %329[FLOAT, 160]
  %330[INT64, 1]
  %331[FLOAT, 160x160x7x1]
  %332[FLOAT, 160]
  %333[FLOAT, 160]
  %334[FLOAT, 160]
  %335[FLOAT, 160]
  %336[INT64, 1]
  %337[FLOAT, 160x160x1x7]
  %338[FLOAT, 160]
  %339[FLOAT, 160]
  %340[FLOAT, 160]
  %341[FLOAT, 160]
  %342[INT64, 1]
  %343[FLOAT, 160x160x7x1]
  %344[FLOAT, 160]
  %345[FLOAT, 160]
  %346[FLOAT, 160]
  %347[FLOAT, 160]
  %348[INT64, 1]
  %349[FLOAT, 192x160x1x7]
  %350[FLOAT, 192]
  %351[FLOAT, 192]
  %352[FLOAT, 192]
  %353[FLOAT, 192]
  %354[INT64, 1]
  %355[FLOAT, 192x768x1x1]
  %356[FLOAT, 192]
  %357[FLOAT, 192]
  %358[FLOAT, 192]
  %359[FLOAT, 192]
  %360[INT64, 1]
  %361[FLOAT, 192x768x1x1]
  %362[FLOAT, 192]
  %363[FLOAT, 192]
  %364[FLOAT, 192]
  %365[FLOAT, 192]
  %366[INT64, 1]
  %367[FLOAT, 192x768x1x1]
  %368[FLOAT, 192]
  %369[FLOAT, 192]
  %370[FLOAT, 192]
  %371[FLOAT, 192]
  %372[INT64, 1]
  %373[FLOAT, 192x192x1x7]
  %374[FLOAT, 192]
  %375[FLOAT, 192]
  %376[FLOAT, 192]
  %377[FLOAT, 192]
  %378[INT64, 1]
  %379[FLOAT, 192x192x7x1]
  %380[FLOAT, 192]
  %381[FLOAT, 192]
  %382[FLOAT, 192]
  %383[FLOAT, 192]
  %384[INT64, 1]
  %385[FLOAT, 192x768x1x1]
  %386[FLOAT, 192]
  %387[FLOAT, 192]
  %388[FLOAT, 192]
  %389[FLOAT, 192]
  %390[INT64, 1]
  %391[FLOAT, 192x192x7x1]
  %392[FLOAT, 192]
  %393[FLOAT, 192]
  %394[FLOAT, 192]
  %395[FLOAT, 192]
  %396[INT64, 1]
  %397[FLOAT, 192x192x1x7]
  %398[FLOAT, 192]
  %399[FLOAT, 192]
  %400[FLOAT, 192]
  %401[FLOAT, 192]
  %402[INT64, 1]
  %403[FLOAT, 192x192x7x1]
  %404[FLOAT, 192]
  %405[FLOAT, 192]
  %406[FLOAT, 192]
  %407[FLOAT, 192]
  %408[INT64, 1]
  %409[FLOAT, 192x192x1x7]
  %410[FLOAT, 192]
  %411[FLOAT, 192]
  %412[FLOAT, 192]
  %413[FLOAT, 192]
  %414[INT64, 1]
  %415[FLOAT, 192x768x1x1]
  %416[FLOAT, 192]
  %417[FLOAT, 192]
  %418[FLOAT, 192]
  %419[FLOAT, 192]
  %420[INT64, 1]
  %421[FLOAT, 128x768x1x1]
  %422[FLOAT, 128]
  %423[FLOAT, 128]
  %424[FLOAT, 128]
  %425[FLOAT, 128]
  %426[INT64, 1]
  %427[FLOAT, 768x128x5x5]
  %428[FLOAT, 768]
  %429[FLOAT, 768]
  %430[FLOAT, 768]
  %431[FLOAT, 768]
  %432[INT64, 1]
  %433[FLOAT, 1000x768]
  %434[FLOAT, 1000]
  %435[FLOAT, 192x768x1x1]
  %436[FLOAT, 192]
  %437[FLOAT, 192]
  %438[FLOAT, 192]
  %439[FLOAT, 192]
  %440[INT64, 1]
  %441[FLOAT, 320x192x3x3]
  %442[FLOAT, 320]
  %443[FLOAT, 320]
  %444[FLOAT, 320]
  %445[FLOAT, 320]
  %446[INT64, 1]
  %447[FLOAT, 192x768x1x1]
  %448[FLOAT, 192]
  %449[FLOAT, 192]
  %450[FLOAT, 192]
  %451[FLOAT, 192]
  %452[INT64, 1]
  %453[FLOAT, 192x192x1x7]
  %454[FLOAT, 192]
  %455[FLOAT, 192]
  %456[FLOAT, 192]
  %457[FLOAT, 192]
  %458[INT64, 1]
  %459[FLOAT, 192x192x7x1]
  %460[FLOAT, 192]
  %461[FLOAT, 192]
  %462[FLOAT, 192]
  %463[FLOAT, 192]
  %464[INT64, 1]
  %465[FLOAT, 192x192x3x3]
  %466[FLOAT, 192]
  %467[FLOAT, 192]
  %468[FLOAT, 192]
  %469[FLOAT, 192]
  %470[INT64, 1]
  %471[FLOAT, 320x1280x1x1]
  %472[FLOAT, 320]
  %473[FLOAT, 320]
  %474[FLOAT, 320]
  %475[FLOAT, 320]
  %476[INT64, 1]
  %477[FLOAT, 384x1280x1x1]
  %478[FLOAT, 384]
  %479[FLOAT, 384]
  %480[FLOAT, 384]
  %481[FLOAT, 384]
  %482[INT64, 1]
  %483[FLOAT, 384x384x1x3]
  %484[FLOAT, 384]
  %485[FLOAT, 384]
  %486[FLOAT, 384]
  %487[FLOAT, 384]
  %488[INT64, 1]
  %489[FLOAT, 384x384x3x1]
  %490[FLOAT, 384]
  %491[FLOAT, 384]
  %492[FLOAT, 384]
  %493[FLOAT, 384]
  %494[INT64, 1]
  %495[FLOAT, 448x1280x1x1]
  %496[FLOAT, 448]
  %497[FLOAT, 448]
  %498[FLOAT, 448]
  %499[FLOAT, 448]
  %500[INT64, 1]
  %501[FLOAT, 384x448x3x3]
  %502[FLOAT, 384]
  %503[FLOAT, 384]
  %504[FLOAT, 384]
  %505[FLOAT, 384]
  %506[INT64, 1]
  %507[FLOAT, 384x384x1x3]
  %508[FLOAT, 384]
  %509[FLOAT, 384]
  %510[FLOAT, 384]
  %511[FLOAT, 384]
  %512[INT64, 1]
  %513[FLOAT, 384x384x3x1]
  %514[FLOAT, 384]
  %515[FLOAT, 384]
  %516[FLOAT, 384]
  %517[FLOAT, 384]
  %518[INT64, 1]
  %519[FLOAT, 192x1280x1x1]
  %520[FLOAT, 192]
  %521[FLOAT, 192]
  %522[FLOAT, 192]
  %523[FLOAT, 192]
  %524[INT64, 1]
  %525[FLOAT, 320x2048x1x1]
  %526[FLOAT, 320]
  %527[FLOAT, 320]
  %528[FLOAT, 320]
  %529[FLOAT, 320]
  %530[INT64, 1]
  %531[FLOAT, 384x2048x1x1]
  %532[FLOAT, 384]
  %533[FLOAT, 384]
  %534[FLOAT, 384]
  %535[FLOAT, 384]
  %536[INT64, 1]
  %537[FLOAT, 384x384x1x3]
  %538[FLOAT, 384]
  %539[FLOAT, 384]
  %540[FLOAT, 384]
  %541[FLOAT, 384]
  %542[INT64, 1]
  %543[FLOAT, 384x384x3x1]
  %544[FLOAT, 384]
  %545[FLOAT, 384]
  %546[FLOAT, 384]
  %547[FLOAT, 384]
  %548[INT64, 1]
  %549[FLOAT, 448x2048x1x1]
  %550[FLOAT, 448]
  %551[FLOAT, 448]
  %552[FLOAT, 448]
  %553[FLOAT, 448]
  %554[INT64, 1]
  %555[FLOAT, 384x448x3x3]
  %556[FLOAT, 384]
  %557[FLOAT, 384]
  %558[FLOAT, 384]
  %559[FLOAT, 384]
  %560[INT64, 1]
  %561[FLOAT, 384x384x1x3]
  %562[FLOAT, 384]
  %563[FLOAT, 384]
  %564[FLOAT, 384]
  %565[FLOAT, 384]
  %566[INT64, 1]
  %567[FLOAT, 384x384x3x1]
  %568[FLOAT, 384]
  %569[FLOAT, 384]
  %570[FLOAT, 384]
  %571[FLOAT, 384]
  %572[INT64, 1]
  %573[FLOAT, 192x2048x1x1]
  %574[FLOAT, 192]
  %575[FLOAT, 192]
  %576[FLOAT, 192]
  %577[FLOAT, 192]
  %578[INT64, 1]
  %579[FLOAT, 1000x2048]
  %580[FLOAT, 1000]
) {
  %581 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [0, 0, 0, 0], strides = [2, 2]](%0, %1)
  %582 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%581, %2, %3, %4, %5)
  %583 = Relu(%582)
  %584 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [0, 0, 0, 0], strides = [1, 1]](%583, %7)
  %585 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%584, %8, %9, %10, %11)
  %586 = Relu(%585)
  %587 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%586, %13)
  %588 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%587, %14, %15, %16, %17)
  %589 = Relu(%588)
  %590 = MaxPool[kernel_shape = [3, 3], pads = [0, 0, 0, 0], strides = [2, 2]](%589)
  %591 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%590, %19)
  %592 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%591, %20, %21, %22, %23)
  %593 = Relu(%592)
  %594 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [0, 0, 0, 0], strides = [1, 1]](%593, %25)
  %595 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%594, %26, %27, %28, %29)
  %596 = Relu(%595)
  %597 = MaxPool[kernel_shape = [3, 3], pads = [0, 0, 0, 0], strides = [2, 2]](%596)
  %598 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%597, %31)
  %599 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%598, %32, %33, %34, %35)
  %600 = Relu(%599)
  %601 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%597, %37)
  %602 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%601, %38, %39, %40, %41)
  %603 = Relu(%602)
  %604 = Conv[dilations = [1, 1], group = 1, kernel_shape = [5, 5], pads = [2, 2, 2, 2], strides = [1, 1]](%603, %43)
  %605 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%604, %44, %45, %46, %47)
  %606 = Relu(%605)
  %607 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%597, %49)
  %608 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%607, %50, %51, %52, %53)
  %609 = Relu(%608)
  %610 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%609, %55)
  %611 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%610, %56, %57, %58, %59)
  %612 = Relu(%611)
  %613 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%612, %61)
  %614 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%613, %62, %63, %64, %65)
  %615 = Relu(%614)
  %616 = AveragePool[kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%597)
  %617 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%616, %67)
  %618 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%617, %68, %69, %70, %71)
  %619 = Relu(%618)
  %620 = Concat[axis = 1](%600, %606, %615, %619)
  %621 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%620, %73)
  %622 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%621, %74, %75, %76, %77)
  %623 = Relu(%622)
  %624 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%620, %79)
  %625 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%624, %80, %81, %82, %83)
  %626 = Relu(%625)
  %627 = Conv[dilations = [1, 1], group = 1, kernel_shape = [5, 5], pads = [2, 2, 2, 2], strides = [1, 1]](%626, %85)
  %628 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%627, %86, %87, %88, %89)
  %629 = Relu(%628)
  %630 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%620, %91)
  %631 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%630, %92, %93, %94, %95)
  %632 = Relu(%631)
  %633 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%632, %97)
  %634 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%633, %98, %99, %100, %101)
  %635 = Relu(%634)
  %636 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%635, %103)
  %637 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%636, %104, %105, %106, %107)
  %638 = Relu(%637)
  %639 = AveragePool[kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%620)
  %640 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%639, %109)
  %641 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%640, %110, %111, %112, %113)
  %642 = Relu(%641)
  %643 = Concat[axis = 1](%623, %629, %638, %642)
  %644 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%643, %115)
  %645 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%644, %116, %117, %118, %119)
  %646 = Relu(%645)
  %647 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%643, %121)
  %648 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%647, %122, %123, %124, %125)
  %649 = Relu(%648)
  %650 = Conv[dilations = [1, 1], group = 1, kernel_shape = [5, 5], pads = [2, 2, 2, 2], strides = [1, 1]](%649, %127)
  %651 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%650, %128, %129, %130, %131)
  %652 = Relu(%651)
  %653 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%643, %133)
  %654 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%653, %134, %135, %136, %137)
  %655 = Relu(%654)
  %656 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%655, %139)
  %657 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%656, %140, %141, %142, %143)
  %658 = Relu(%657)
  %659 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%658, %145)
  %660 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%659, %146, %147, %148, %149)
  %661 = Relu(%660)
  %662 = AveragePool[kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%643)
  %663 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%662, %151)
  %664 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%663, %152, %153, %154, %155)
  %665 = Relu(%664)
  %666 = Concat[axis = 1](%646, %652, %661, %665)
  %667 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [0, 0, 0, 0], strides = [2, 2]](%666, %157)
  %668 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%667, %158, %159, %160, %161)
  %669 = Relu(%668)
  %670 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%666, %163)
  %671 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%670, %164, %165, %166, %167)
  %672 = Relu(%671)
  %673 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%672, %169)
  %674 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%673, %170, %171, %172, %173)
  %675 = Relu(%674)
  %676 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [0, 0, 0, 0], strides = [2, 2]](%675, %175)
  %677 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%676, %176, %177, %178, %179)
  %678 = Relu(%677)
  %679 = MaxPool[kernel_shape = [3, 3], pads = [0, 0, 0, 0], strides = [2, 2]](%666)
  %680 = Concat[axis = 1](%669, %678, %679)
  %681 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%680, %181)
  %682 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%681, %182, %183, %184, %185)
  %683 = Relu(%682)
  %684 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%680, %187)
  %685 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%684, %188, %189, %190, %191)
  %686 = Relu(%685)
  %687 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%686, %193)
  %688 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%687, %194, %195, %196, %197)
  %689 = Relu(%688)
  %690 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%689, %199)
  %691 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%690, %200, %201, %202, %203)
  %692 = Relu(%691)
  %693 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%680, %205)
  %694 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%693, %206, %207, %208, %209)
  %695 = Relu(%694)
  %696 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%695, %211)
  %697 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%696, %212, %213, %214, %215)
  %698 = Relu(%697)
  %699 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%698, %217)
  %700 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%699, %218, %219, %220, %221)
  %701 = Relu(%700)
  %702 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%701, %223)
  %703 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%702, %224, %225, %226, %227)
  %704 = Relu(%703)
  %705 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%704, %229)
  %706 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%705, %230, %231, %232, %233)
  %707 = Relu(%706)
  %708 = AveragePool[kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%680)
  %709 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%708, %235)
  %710 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%709, %236, %237, %238, %239)
  %711 = Relu(%710)
  %712 = Concat[axis = 1](%683, %692, %707, %711)
  %713 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%712, %241)
  %714 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%713, %242, %243, %244, %245)
  %715 = Relu(%714)
  %716 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%712, %247)
  %717 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%716, %248, %249, %250, %251)
  %718 = Relu(%717)
  %719 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%718, %253)
  %720 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%719, %254, %255, %256, %257)
  %721 = Relu(%720)
  %722 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%721, %259)
  %723 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%722, %260, %261, %262, %263)
  %724 = Relu(%723)
  %725 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%712, %265)
  %726 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%725, %266, %267, %268, %269)
  %727 = Relu(%726)
  %728 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%727, %271)
  %729 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%728, %272, %273, %274, %275)
  %730 = Relu(%729)
  %731 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%730, %277)
  %732 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%731, %278, %279, %280, %281)
  %733 = Relu(%732)
  %734 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%733, %283)
  %735 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%734, %284, %285, %286, %287)
  %736 = Relu(%735)
  %737 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%736, %289)
  %738 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%737, %290, %291, %292, %293)
  %739 = Relu(%738)
  %740 = AveragePool[kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%712)
  %741 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%740, %295)
  %742 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%741, %296, %297, %298, %299)
  %743 = Relu(%742)
  %744 = Concat[axis = 1](%715, %724, %739, %743)
  %745 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%744, %301)
  %746 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%745, %302, %303, %304, %305)
  %747 = Relu(%746)
  %748 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%744, %307)
  %749 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%748, %308, %309, %310, %311)
  %750 = Relu(%749)
  %751 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%750, %313)
  %752 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%751, %314, %315, %316, %317)
  %753 = Relu(%752)
  %754 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%753, %319)
  %755 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%754, %320, %321, %322, %323)
  %756 = Relu(%755)
  %757 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%744, %325)
  %758 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%757, %326, %327, %328, %329)
  %759 = Relu(%758)
  %760 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%759, %331)
  %761 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%760, %332, %333, %334, %335)
  %762 = Relu(%761)
  %763 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%762, %337)
  %764 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%763, %338, %339, %340, %341)
  %765 = Relu(%764)
  %766 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%765, %343)
  %767 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%766, %344, %345, %346, %347)
  %768 = Relu(%767)
  %769 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%768, %349)
  %770 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%769, %350, %351, %352, %353)
  %771 = Relu(%770)
  %772 = AveragePool[kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%744)
  %773 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%772, %355)
  %774 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%773, %356, %357, %358, %359)
  %775 = Relu(%774)
  %776 = Concat[axis = 1](%747, %756, %771, %775)
  %777 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%776, %361)
  %778 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%777, %362, %363, %364, %365)
  %779 = Relu(%778)
  %780 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%776, %367)
  %781 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%780, %368, %369, %370, %371)
  %782 = Relu(%781)
  %783 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%782, %373)
  %784 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%783, %374, %375, %376, %377)
  %785 = Relu(%784)
  %786 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%785, %379)
  %787 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%786, %380, %381, %382, %383)
  %788 = Relu(%787)
  %789 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%776, %385)
  %790 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%789, %386, %387, %388, %389)
  %791 = Relu(%790)
  %792 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%791, %391)
  %793 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%792, %392, %393, %394, %395)
  %794 = Relu(%793)
  %795 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%794, %397)
  %796 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%795, %398, %399, %400, %401)
  %797 = Relu(%796)
  %798 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%797, %403)
  %799 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%798, %404, %405, %406, %407)
  %800 = Relu(%799)
  %801 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%800, %409)
  %802 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%801, %410, %411, %412, %413)
  %803 = Relu(%802)
  %804 = AveragePool[kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%776)
  %805 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%804, %415)
  %806 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%805, %416, %417, %418, %419)
  %807 = Relu(%806)
  %808 = Concat[axis = 1](%779, %788, %803, %807)
  %809 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%808, %435)
  %810 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%809, %436, %437, %438, %439)
  %811 = Relu(%810)
  %812 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [0, 0, 0, 0], strides = [2, 2]](%811, %441)
  %813 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%812, %442, %443, %444, %445)
  %814 = Relu(%813)
  %815 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%808, %447)
  %816 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%815, %448, %449, %450, %451)
  %817 = Relu(%816)
  %818 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 7], pads = [0, 3, 0, 3], strides = [1, 1]](%817, %453)
  %819 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%818, %454, %455, %456, %457)
  %820 = Relu(%819)
  %821 = Conv[dilations = [1, 1], group = 1, kernel_shape = [7, 1], pads = [3, 0, 3, 0], strides = [1, 1]](%820, %459)
  %822 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%821, %460, %461, %462, %463)
  %823 = Relu(%822)
  %824 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [0, 0, 0, 0], strides = [2, 2]](%823, %465)
  %825 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%824, %466, %467, %468, %469)
  %826 = Relu(%825)
  %827 = MaxPool[kernel_shape = [3, 3], pads = [0, 0, 0, 0], strides = [2, 2]](%808)
  %828 = Concat[axis = 1](%814, %826, %827)
  %829 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%828, %471)
  %830 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%829, %472, %473, %474, %475)
  %831 = Relu(%830)
  %832 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%828, %477)
  %833 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%832, %478, %479, %480, %481)
  %834 = Relu(%833)
  %835 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 3], pads = [0, 1, 0, 1], strides = [1, 1]](%834, %483)
  %836 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%835, %484, %485, %486, %487)
  %837 = Relu(%836)
  %838 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 1], pads = [1, 0, 1, 0], strides = [1, 1]](%834, %489)
  %839 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%838, %490, %491, %492, %493)
  %840 = Relu(%839)
  %841 = Concat[axis = 1](%837, %840)
  %842 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%828, %495)
  %843 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%842, %496, %497, %498, %499)
  %844 = Relu(%843)
  %845 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%844, %501)
  %846 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%845, %502, %503, %504, %505)
  %847 = Relu(%846)
  %848 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 3], pads = [0, 1, 0, 1], strides = [1, 1]](%847, %507)
  %849 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%848, %508, %509, %510, %511)
  %850 = Relu(%849)
  %851 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 1], pads = [1, 0, 1, 0], strides = [1, 1]](%847, %513)
  %852 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%851, %514, %515, %516, %517)
  %853 = Relu(%852)
  %854 = Concat[axis = 1](%850, %853)
  %855 = AveragePool[kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%828)
  %856 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%855, %519)
  %857 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%856, %520, %521, %522, %523)
  %858 = Relu(%857)
  %859 = Concat[axis = 1](%831, %841, %854, %858)
  %860 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%859, %525)
  %861 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%860, %526, %527, %528, %529)
  %862 = Relu(%861)
  %863 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%859, %531)
  %864 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%863, %532, %533, %534, %535)
  %865 = Relu(%864)
  %866 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 3], pads = [0, 1, 0, 1], strides = [1, 1]](%865, %537)
  %867 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%866, %538, %539, %540, %541)
  %868 = Relu(%867)
  %869 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 1], pads = [1, 0, 1, 0], strides = [1, 1]](%865, %543)
  %870 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%869, %544, %545, %546, %547)
  %871 = Relu(%870)
  %872 = Concat[axis = 1](%868, %871)
  %873 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%859, %549)
  %874 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%873, %550, %551, %552, %553)
  %875 = Relu(%874)
  %876 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%875, %555)
  %877 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%876, %556, %557, %558, %559)
  %878 = Relu(%877)
  %879 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 3], pads = [0, 1, 0, 1], strides = [1, 1]](%878, %561)
  %880 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%879, %562, %563, %564, %565)
  %881 = Relu(%880)
  %882 = Conv[dilations = [1, 1], group = 1, kernel_shape = [3, 1], pads = [1, 0, 1, 0], strides = [1, 1]](%878, %567)
  %883 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%882, %568, %569, %570, %571)
  %884 = Relu(%883)
  %885 = Concat[axis = 1](%881, %884)
  %886 = AveragePool[kernel_shape = [3, 3], pads = [1, 1, 1, 1], strides = [1, 1]](%859)
  %887 = Conv[dilations = [1, 1], group = 1, kernel_shape = [1, 1], pads = [0, 0, 0, 0], strides = [1, 1]](%886, %573)
  %888 = BatchNormalization[consumed_inputs = [0, 0, 0, 1, 1], epsilon = 0.00100000004749745, is_test = 1, momentum = 1](%887, %574, %575, %576, %577)
  %889 = Relu(%888)
  %890 = Concat[axis = 1](%862, %872, %885, %889)
  %891 = AveragePool[kernel_shape = [8, 8], pads = [0, 0, 0, 0], strides = [8, 8]](%890)
  %892, %893 = Dropout[is_test = 1, ratio = 0.5](%891)
  %894 = Flatten[axis = 1](%892)
  %895 = Gemm[alpha = 1, beta = 1, broadcast = 1, transB = 1](%894, %579, %580)
  return %895
}